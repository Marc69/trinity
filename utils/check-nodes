#!/bin/python
import csv
import subprocess
import re

mac_p = re.compile(r'mac=(.*)')
node_p = re.compile(r'\D+(\d+)')

def hexmac(s):
   return ':'.join(['%02x' % int(c) for c in s.split('.')])

def get_arp_mac(node):
    mac = subprocess.check_output('arp %s | head -2 | tail -1' % node, shell=True).strip()
    if mac.find('no entry') != -1:
        return None
    else:
        return mac[33:50]

def get_xcat_mac(node):
    result = subprocess.check_output('lsdef %s -i mac' % node, shell=True)
    result = result.split('\n')[1].strip()
    m = mac_p.search(result)
    return m.group(1) if m.group(1) else None

def get_port(node):
    nodemac = get_arp_mac(node)
    result = subprocess.check_output('snmpwalk -v2c -c public switch-controllers .1.3.6.1.2.1.17.7.1.2.2.1.2', shell = True, stderr=subprocess.STDOUT)
    p = re.compile(r'SNMPv2-SMI::mib-(?:\d+(?:\.\d+){8})\.(\d+(?:\.\d+)+) = INTEGER: (\d+)')
    for line in result.split('\n'):
        m = p.match(line)
        if m:
            mac, port = m.groups()
            mac = hexmac(mac)
            if mac == nodemac:
                return port
    else:
        return None

def check_port(node, port):
    m = node_p.match(node)
    return int(m.group(1)) == int(port)


p = subprocess.Popen("tabdump nodelist", shell=True, stdout=subprocess.PIPE)
for line in csv.reader(filter(lambda row: row[0]!='#', p.stdout)):
    node, groups = line[0], line[1]
    groups = groups.split(',')
    xcat_mac = get_xcat_mac(node)
    port = get_port(node)
    arp_mac = get_arp_mac(node)
    
    if not xcat_mac:
        print node, "Not discovered"
    elif xcat_mac != arp_mac:
        print node, "arp and xcat do not match. Alien node detected."
    elif port is None:
        print node, "mac address not found on any port, did you remove the node?"
    elif check_port(node, port):
        print node, xcat_mac, port, "OK"
    else:
        print node, xcat_mac, port, "ports do not match name"

   
