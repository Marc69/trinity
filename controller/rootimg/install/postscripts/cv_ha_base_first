#! /usr/bin/bash
##description    : Setup the first round of High Availability.
##                 This will setup:
##                 1. networking
##                 2. Pacemaker
##                 3. Drbd replication
##                 4. IB configuration
##                 5. Initial file layout for the controller(s)
##                 6. IPTables NAT
##author         : Hans Then 
##email          : hans.then@clustervision


#-----------------------------------------------------------------------------------------------
# Determine if this will be the active or passive node. An odd node will become 
# the active node. Any even node will become the passive node. 
#
# Adapt the network configuration accordingly.
#-----------------------------------------------------------------------------------------------
n=$(echo $NODE | egrep -o '[[:digit:]]*' | head -n1)
# normalize to 1 or 2
N=$((((n-1)%2)+1))

# set the new ip addresses
octet=$((254-$N))

# update network scripts
filename=$(grep -l IPADDR=10.141.255.254 /etc/sysconfig/network-scripts/ifcfg-*)
set -x
if [ ! -z $filename ]; then 
    echo "SWitching IP addresses"
    sed -e "s/\(IPADDR.\?\)=\(10\.14[18]\.255\)\.254/\1=\2.$octet/" -i $filename
    echo "Changing ip addresses to allow floating"
    echo controller-$N.cluster > /etc/hostname
    hostname controller-$N.cluster 
    dev=$(echo $filename | awk -F- '{print $3}')
    ip addr del 10.141.255.254/16 dev $dev
    ip addr del 10.148.255.254/16 dev $dev
    ip addr add 10.141.255.$octet/16 dev $dev
    ip addr add 10.148.255.$octet/16 dev $dev
    ip route add 172.16.0.0/12 dev $dev
    echo "Checking IP addresses"
    ip addr add 10.149.255.$octet/16 dev ib0
    ip link set ib0 up
    ip addr show dev $dev
else
    echo IP address 254 appears to be floating already. Did you run this script earlier?
fi


#-----------------------------------------------------------------------------------------------
# Install pacemaker
#-----------------------------------------------------------------------------------------------
systemctl start pcsd
systemctl enable pcsd

echo system | passwd hacluster --stdin
echo drbd > /etc/modules-load.d/drbd.conf

#------------------------------------------------------------
# configure drbd
#------------------------------------------------------------
# remove the drbd volume from mounting
sed -i -e "/vg_root-lv_drbd/d" /etc/fstab
umount /drbd

# Just to make sure, we clear the disk
echo Clearing drbd logical volume, this may take some time.
dd if=/dev/zero of=/dev/mapper/vg_root-lv_drbd bs=1M count=1024

# make sure the host names can be resolved
if ! grep 10.141.255.253 /etc/hosts; then echo "10.141.255.253 controller-1 controller-1.cluster" >> /etc/hosts; fi
if ! grep 10.141.255.252 /etc/hosts; then echo "10.141.255.252 controller-2 controller-2.cluster" >> /etc/hosts; fi
if ! grep 10.141.255.254 /etc/hosts; then echo "10.141.255.254 controller controller.cluster" >> /etc/hosts; fi

# If we can use the IB interface for DRBD we will do so.
if ping -c1 10.149.255.$octet > /dev/null 2>&1; then
    ip1=10.149.255.253
    ip2=10.149.255.252
else
    ip1=10.141.255.253
    ip2=10.141.255.252
fi

cat <<EOF >/etc/drbd.d/ha_disk.res
resource ha_disk {
       net {
         after-sb-0pri discard-younger-primary;
         after-sb-1pri discard-secondary;
         after-sb-2pri disconnect;
       }
       on controller-1.cluster {
         device    /dev/drbd1;
         disk      /dev/mapper/vg_root-lv_drbd;
         address   ${ip1}:7789;
         meta-disk internal;
       }
       on controller-2.cluster {
         device    /dev/drbd1;
         disk      /dev/mapper/vg_root-lv_drbd;
         address   ${ip2}:7789;
         meta-disk internal;
       }
}
EOF

if [[ "$N" = 1 ]]; then 
   # Wait until the passive controller is ready to continue
   for i in {1..100}; do
       if ssh controller-2.cluster cat /tmp/cv_ha_ready; then break; fi
       sleep 5
   done
   if ! ssh controller-2.cluster cat /tmp/cv_ha_ready; then 
       echo BUGGERALL unable to reach controller-2, exiting.
       exit -1
   fi
   scp /etc/hosts controller-2.cluster:/etc/hosts
      
   #-------------------------------------------------------------------
   # Setup pacemaker
   #-------------------------------------------------------------------
   pcs cluster auth controller-1.cluster controller-2.cluster -u hacluster -p system
   pcs cluster setup --name ha_cluster controller-1.cluster controller-2.cluster --force
   pcs cluster start --all

   #-------------------------------------------------------------------
   # Setup drbd and disks
   #-------------------------------------------------------------------
   drbdadm create-md ha_disk
   modprobe drbd
   drbdadm up ha_disk
   drbdadm primary --force ha_disk

   mkfs -t ext4 /dev/drbd1

   ssh controller-2.cluster drbdadm create-md ha_disk
   ssh controller-2.cluster modprobe drbd
   ssh controller-2.cluster drbdadm up ha_disk
   sleep 1
   
   #-------------------------------------------------------------------
   # Now setup the common resources
   #-------------------------------------------------------------------
   dev=$(ip a | grep 10.148.255.253 | awk '{print $5}')

   # Set basic defaults
   pcs property set no-quorum-policy=ignore
   pcs resource op defaults timeout="120s"
   pcs resource defaults resource-stickyness=100
   pcs property set stonith-enabled=false

   pcs resource create ip ocf:heartbeat:IPaddr2 ip="10.141.255.254" iflabel="xCAT" cidr_netmask="16" nic="$dev" op monitor interval="37s"
   pcs resource create drbd ocf:linbit:drbd drbd_resource=ha_disk
   pcs resource master ms_drbd drbd master-max="1" master-node-max="1" clone-max="2" clone-node-max="1" notify="true"
   pcs resource create fs_drbd ocf:heartbeat:Filesystem device="/dev/drbd/by-res/ha_disk" directory="/drbd" fstype="ext4" op monitor interval="57s"

   # We specify that all services and groups should be on
   # the same node as where drbd keeps its master copy of the data.
   pcs constraint colocation add fs_drbd ms_drbd INFINITY with-rsc-role=Master
   pcs constraint colocation add fs_drbd ip
   pcs constraint order promote ms_drbd then start fs_drbd

   pcs resource move ip $(hostname)
   pcs resource move ms_drbd $(hostname)
   pcs resource move fs_drbd $(hostname)
   mkdir /nfshome

else
   touch /tmp/cv_ha_ready
fi

dev=$(ip a | grep 10.148.255.${octet} | awk '{print $5}')
pcs resource create ipmi-$(hostname) ocf:heartbeat:IPaddr2 ip="10.141.255.${octet}" iflabel="ipmi" cidr_netmask="16" nic="$dev" op monitor interval="37s"
pcs constraint location ipmi-$(hostname) prefers $(hostname)

pcs stonith create fence-$(hostname) fence_ipmi_lan pcmk_host_list="$(hostname)" ipaddr="192.168.8.${N}" action="reboot" login="root" passwd="system" delay=15     op monitor interval=60s

systemctl enable pacemaker
systemctl enable corosync

#----------------------------------------------------------------------------------
# HTH: BOTH
#----------------------------------------------------------------------------------
systemctl stop NetworkManager
systemctl disable NetworkManager
killall dhclient

# Fix for #356
systemctl disable firewalld
systemctl stop firewalld

read ETH1 ETH2 ETH3 <<<$(ls /sys/class/net/ | grep "^e" | sort | head -3)
# setup NAT, so nodes can access the internet (see manual step 1.f)
systemctl enable iptables 
systemctl start iptables
modprobe iptable_nat

iptables -A FORWARD -i $ETH2 -j ACCEPT
iptables -t nat -A POSTROUTING -o $ETH1 -j MASQUERADE
iptables -D FORWARD -j REJECT --reject-with icmp-host-prohibited
iptables -D INPUT -j REJECT --reject-with icmp-host-prohibited
service iptables save

# FIXME:
ip route add 172.16.0.0/12 dev $ETH2
mv /etc/sysconfig/network-scripts/route-eno2 /etc/sysconfig/network-scripts/route-${ETH2} 2> /dev/null

#--------------------------------------------------------------------------------------
# Additional network processing
#--------------------------------------------------------------------------------------
sed -i /etc/sysconfig/network-scripts/ifcfg-${ETH2} -e "s/DEFROUTE=\(.*\)/DEFROUTE=no/"
sed -i /etc/sysconfig/network-scripts/ifcfg-${ETH1} -e "s/DEFROUTE=\(.*\)/DEFROUTE=yes/"

last=$(ip route get 10.141.255.254 | head -1 | awk -F' ' '{print $NF}' | awk -F. '{print $NF}')
if [[ ! -z "$ETH2" ]]; then
cat >> /etc/sysconfig/network-scripts/ifcfg-$ETH2 << EOF
IPADDR1=10.148.255.${last}
PREFIX1=16
GATEWAY1=10.148.255.${last}
EOF
ip a a 10.148.255.${last}/16 dev $ETH2
fi

if ! systemctl restart network; then
    sleep 3
    systemctl start network
fi

setenforce 0
sestatus

#-----------------------------------------------------------------------------------------
# Patch xCAT. Needs to be done on both nodes.
#-----------------------------------------------------------------------------------------
if [ ! -z $SITEMASTER ]; then
    mkdir /tmp/trinity
    mount ${SITEMASTER}:/trinity /tmp/trinity       
fi

cd /opt/xcat/share/xcat/netboot/centos
ln -s ../rh/dracut_033 .
ln -s ../rh/dracut .
cd /
cat /tmp/trinity/controller/xcat/patches/*.patch | patch -p0
systemctl restart xcatd
#--------------------------------------------------------------------------------------
# copy required files from the master node to the controller node
#--------------------------------------------------------------------------------------
cp -LrT /tmp/trinity/controller/rootimg /

sed -e "s/\(IPADDR.\?\)=\(10\.149\.255\)\.254/\1=\2.${last}/" -i /etc/sysconfig/network-scripts/ifcfg-ib0
ifup ib0
mkdir -p /var/lib/docker-registry
