#!/usr/bin/python
import sys
import subprocess
import json
from jsonpath_rw import jsonpath, parse

def check_output(*popenargs, **kwargs):
    if 'stdout' in kwargs:
        raise ValueError('stdout argument not allowed, it will be overridden.')
    process = subprocess.Popen(stdout=subprocess.PIPE, *popenargs, **kwargs)
    output, unused_err = process.communicate()
    retcode = process.poll()
    return output

def extract(json, path):
    expr = parse(path)
    return [match.value for match in expr.find(json)]

if __name__ == '__main__':
    image = sys.argv[1]

    info = check_output("docker inspect controller:5050/%s" % image, shell=True)
    ports = json.loads(info)[0]['ContainerConfig']['ExposedPorts']
    volumes = json.loads(info)[0]['ContainerConfig']['Volumes']
    ports = ports.keys() if ports else []
    volumes = volumes.keys() if volumes else []
    #print extract(info, '$')
    args = ['docker', 'run']
    for port in ports:
        if port.endswith('/tcp'):
            port = port[:-len('/tcp')]
        args.append('-p')
        args.append('%s:%s' % (port,port))
    for volume in volumes:
        args.append('-v')
        args.append('%s:%s' % (volume,volume))
    args.extend(sys.argv[2:])
    args.append('controller:5050/%s' % image)
    #args.append('/bin/bash')
    subprocess.call(args)
    print "Ended"

