#! /usr/bin/bash
##description    : High Availability setup for the non-dockerized openstack HA services
## 	           This needs to be called after cv_install_openstack_on_controller
##author         : Hans Then
##email          : hans.then@clustervision

pcs resource create nova-compute systemd:openstack-nova-compute op monitor interval="37s"
pcs resource create nova-network systemd:openstack-nova-network op monitor interval="37s"
pcs resource create nova-metadata-api systemd:openstack-nova-metadata-api op monitor interval="37s"
pcs resource group add grp_NovaCompute nova-compute nova-network nova-metadata-api
pcs resource clone grp_NovaCompute clone-max=3 clone-node-max=1 notify=false

pcs resource create trinity-api lsb:trinity_api op monitor interval="37s"
pcs constraint colocation add trinity-api ip
pcs constraint order start xCAT then start trinity-api
pcs constraint order start httpd then start trinity-api

pcs resource create sentinel ocf:pacemaker:Dummy
pcs constraint colocation add sentinel ip
pcs constraint order start grp_xCAT then start sentinel
pcs constraint order start grp_OpenStack then start sentinel
pcs constraint order start trinity-api then start sentinel
pcs constraint order start grp_NovaCompute-clone then start sentinel

pcs constraint order stop grp_OpenStack then stop fs_drbd
pcs constraint order stop grp_xCAT then stop fs_drbd
pcs constraint order stop fs_drbd then demote ms_drbd

#setup fencing
for in {1..2}; do
    dev=$(ip route get 192.168.1.254 | head -1 | awk -F' ' '{print $(NF-2)}')
    pcs resource create ipmi-${i} ocf:heartbeat:IPaddr2 ip="192.168.8.${i}" \
        iflabel="ipmi" cidr_netmask="16" nic="$dev" op monitor interval="37s"
    pcs constraint location ipmi-${i} prefers controller-${i}.cluster
    pcs stonith create fence-${i} fence_ipmilan pcmk_host_list="controller-${i}.cluster" \
        ipaddr="192.168.8.${i}" action="reboot" login="root" \
        passwd="system" delay=15 op monitor interval=60s
done
pcs property set stonith-enabled=false


source /root/keystonerc_admin
for server in $(nova host-list --zone nova | grep compute | awk -F\| '{print $2}' | cut -b2-); do
    nova aggregate-create $server $server
    nova aggregate-add-host $server $server
done

# These are just for diagnostics
nova aggregate-list
nova availability-zone-list

pcs resource clear ip
pcs resource clear drbd
pcs resource clear ms_drbd
pcs resource clear fs_drbd

echo "$0 finished @ $(date)" >> /var/log/postinstall.log
