#!/usr/bin/env bash
##title          : cv_install_dockerize
##description    : Sets up a dockerized infrastructure.
##                 The following services are dockerized
##                   MariaDB (Database)
##                   RabbitMQ (Message Queue)
##                   Keystone (OpenStack Identity)
##                   Glance (OpenStack Image)
##                   Nova controller (OpenStack Compute: controller part)
##author         : Abhishek Mukherjee, Hans Then
##email          : abhishek.mukherjee@clustervision.com, hans.then@clustervision.com

#------------------------------------------------------------------------------
# Setup the dockerized components
#------------------------------------------------------------------------------

REGISTRY="controller:5050"
TOPDIR="/trinity"
profiles=(
  "mariadb"
  "rabbitmq"
  "keystone"
  "glance"
  "nova_controller"        
)

declare -A ports
ports=(
  ["mariadb"]="3306"
  ["rabbitmq"]="5672 15672 4369 25672"
  ["keystone"]="5000 35357"
  ["glance"]="9191 9292"
  ["nova_controller"]="8773 8774 8775 6080 5900"
)

services=(
  "keystone"
  "glance"
  "nova"
)

keystone_endpoint="http://$(hostname -i):35357/v2.0"

for profile in "${profiles[@]}"; do
  if [ -z ${SITEMASTER} ]; then
      docker build --rm=true -t ${REGISTRY}/${profile} ${TOPDIR}/${profile}
  else
      docker pull ${SITEMASTER}:5050/${profile} 
      docker tag ${SITEMASTER}:5050/${profile} ${REGISTRY}/${profile}
  fi
      
  docker push ${REGISTRY}/${profile}
  cmd_string=""
  for port in ${ports[${profile}]}; do
    cmd_string="${cmd_string} -p ${port}:${port}"
  done
  cmd_string="${cmd_string} --name=${profile} -d ${REGISTRY}/${profile}"
  docker run --net=host --privileged=true ${cmd_string}
  case ${profile} in 
    keystone)
      up=1;
      while [ ${up} -ne "0" ]; do 
        echo "Waiting for keystone to come up!"
        curl -s ${keystone_endpoint} 
        up=$?  
        sleep 10
      done
      for service in "${services[@]}"; do
        setup_service="${TOPDIR}/${profile}/${service}-setup.sh"
        echo ${setup_service}
        . ${setup_service}
      done
    ;;
  esac
  service=${profile//_/-}
  systemctl enable ${service}.service
done
echo $0 finished >> /var/log/postinstall.log


