#!/bin/bash
#
#       /etc/rc.d/init.d/trinity
#
#       Daemon for trinity compute nodes
#       
# chkconfig:   2345 95 95
# description: Daemon for trinity

### BEGIN INIT INFO
# Provides:       trinity
# Required-Start: $network docker
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start: 2 3 4 5
# Default-Stop:  0 1 6
# Short-Description: start and stop trinity
# Description: Daemon for trinity
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

start() {
    echo -n "Starting Trinity"
    # Determine our container name
    NAME=$(hostname -s | sed s/node/c/)

    # Determine in which virtual cluster this node is active
    for VC in vc-{a..l}; do
        if host $NAME.$VC; then break; fi
    done
    IP=$(host ${NAME}.${VC} | awk -F' ' '{print $4}')
    GW=$(echo $IP | awk -F. '{ print $1"."$2".255.254" }')

    state=$(docker inspect --format='{{.State.Running}}' trinity)
    case $state in
        true)
            ;;
        false)
            docker start trinity
            /usr/local/sbin/pipework eno1 trinity ${IP}/16@${GW}
            ;;
        *)
            docker run \
               --net=none \
               --privileged \
               -v /dev/infiniband:/dev/infiniband \
               -v /cm/shared/:/cm/shared \
               -v /root:/root \
               -v /cluster/${VC}:/cluster \
               --hostname=${NAME}.${VC} \
               --name=trinity \
               -d controller:5050/compute
            /usr/local/sbin/pipework eno1 trinity ${IP}/16@${GW}
        ;;
    esac
}

stop() {
    echo -n "Stopping trinity "
    docker stop trinity
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    docker ps | grep vc
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac

exit $?
