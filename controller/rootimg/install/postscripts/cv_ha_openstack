#! /usr/bin/bash
##description    : The third round of High Availability.
##                 This will setup:
##                 1. Pacemaker configuration for the OpenStack Controller services
##                 This needs to be called after cv_install_dockerize.
##                 TODO: add openstack and trinity_api to this setup (contents of cv_install_openstack_on_controller)
##author         : Hans Then
##email          : hans.then@clustervision

pcs cluster cib config
# Setup high availability for the docker containers
pcs -f config resource create docker systemd:docker op monitor interval="37s"
pcs -f config resource clone docker clone-node-max=1 notify=false

pcs -f config resource create mariadb systemd:mariadb op monitor interval="37s"
pcs -f config resource create rabbitmq systemd:rabbitmq op monitor interval="37s"
pcs -f config resource create keystone systemd:keystone op monitor interval="37s"
pcs -f config resource create glance systemd:glance op monitor interval="37s"
pcs -f config resource create nova-controller systemd:nova-controller op monitor interval="37s"

pcs -f config resource group add grp_OpenStack mariadb rabbitmq keystone glance nova-controller
pcs -f config constraint colocation add grp_OpenStack ip
pcs -f config constraint order start fs_drbd then start mariadb
# This is only required when we run xCAT from inside mariadb
#pcs -f config constraint order start mariadb then start xCAT
pcs -f config constraint order start mariadb then start keystone
pcs -f config constraint order start keystone then start glance
pcs -f config constraint order start keystone then start nova-controller

pcs cluster cib-push config

#--------------------------------------------------------------------------
# Create keystone endpoints for glance etc
#--------------------------------------------------------------------------
keystone_endpoint="http://controller.cluster:35357/v2.0"
for i in {1..60}; do
    if curl -s ${keystone_endpoint}; then 
        /tmp/trinity/keystone/keystone-setup.sh
        /tmp/trinity/keystone/glance-setup.sh
        /tmp/trinity/keystone/nova-setup.sh
        echo "Applied keystone initialization scripts"
        break
    fi
    echo "Waiting for keystone to come up!"
    sleep 60
done
[[ ${i} == 60 ]] && echo "Timeout waiting for keystone to come up"

read ETH0 ETH1 ETH2 <<<$(ls /sys/class/net/ | grep "^e" | sort | head -3)
BRIDGE="br100"
PRI_NIC=${ETH1}
source /etc/profile.d/xcat.sh
sed -e "s/<TENANT>/admin/g" \
    -e "s/<USER>/admin/g" \
    -e "s/<PASSWORD>/system/g" \
    -e "s/<OPENSTACK>/10.141.255.254/g" \
    /trinity/openstack/keystonerc > /root/keystonerc_admin
source /root/keystonerc_admin

sed -e "s/eno2/${ETH1}/g" \
    -i /etc/trinity/trinity_api.conf

#-- Create the Flat Network
NETWORK_LABEL="novanetwork"
nova network-create \
       --fixed-range-v4 192.168.32.0/24 \
       --fixed-cidr 192.168.32.0/24 \
       --bridge-interface ${PRI_NIC} \
       --bridge ${BRIDGE} \
       ${NETWORK_LABEL}

#-- Download the base login node image (CentOS cloud image) and upload it to glance
# We have a sitemaster, copy from master node.
mkdir -p /trinity/qcows/
CLOUD_IMAGE="/trinity/qcows/login.qcow2"
# FIXME: Find a better location. We cannot assume /tmp/trinity is still mounted here.
cp /tmp/trinity/qcows/login.qcow2 ${CLOUD_IMAGE}
CLOUD_IMAGE_FORMAT="qcow2"
CLOUD_CONTAINER_FORMAT="bare"
LOGIN_IMAGE="login"
LOGIN_DATA="/root/.login_data"
LOGIN_SETUP="/trinity/login/mini-setup.sh"

glance image-create \
    --name "${LOGIN_IMAGE}" \
    --disk-format "${CLOUD_IMAGE_FORMAT}" \
    --container-format "${CLOUD_CONTAINER_FORMAT}" \
    --is-public True \
    --file "${CLOUD_IMAGE}"

systemctl daemon-reload

echo "$0 finished @ $(date)" >> /var/log/postinstall.log
